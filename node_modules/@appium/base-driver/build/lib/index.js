"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ALL_COMMANDS = void 0;
Object.defineProperty(exports, "BaseDriver", {
  enumerable: true,
  get: function () {
    return _driver.BaseDriver;
  }
});
exports.CREATE_SESSION_COMMAND = void 0;
Object.defineProperty(exports, "DEFAULT_BASE_PATH", {
  enumerable: true,
  get: function () {
    return _constants.DEFAULT_BASE_PATH;
  }
});
exports.DELETE_SESSION_COMMAND = exports.DEFAULT_WS_PATHNAME_PREFIX = void 0;
Object.defineProperty(exports, "DeviceSettings", {
  enumerable: true,
  get: function () {
    return _deviceSettings.DeviceSettings;
  }
});
Object.defineProperty(exports, "DriverCore", {
  enumerable: true,
  get: function () {
    return _core.DriverCore;
  }
});
exports.NO_SESSION_ID_COMMANDS = exports.METHOD_MAP = exports.JWProxy = exports.GET_STATUS_COMMAND = void 0;
Object.defineProperty(exports, "PREFIXED_APPIUM_OPTS_CAP", {
  enumerable: true,
  get: function () {
    return caps.PREFIXED_APPIUM_OPTS_CAP;
  }
});
Object.defineProperty(exports, "PROTOCOLS", {
  enumerable: true,
  get: function () {
    return _constants.PROTOCOLS;
  }
});
exports.validateCaps = exports.statusCodes = exports.server = exports.routeToCommandName = exports.routeConfiguringFunction = exports.processCapabilities = exports.normalizeBasePath = exports.isStandardCap = exports.isSessionCommand = exports.isErrorType = exports.getSummaryByCode = exports.errors = exports.errorFromW3CJsonCode = exports.errorFromMJSONWPStatusCode = exports.errorFromCode = exports.determineProtocol = exports.default = exports.STATIC_DIR = void 0;

require("source-map-support/register");

var _bluebird = _interopRequireDefault(require("bluebird"));

var _driver = require("./basedriver/driver");

var _core = require("./basedriver/core");

var _deviceSettings = require("./basedriver/device-settings");

var protocol = _interopRequireWildcard(require("./protocol"));

var _constants = require("./constants");

var staticIndex = _interopRequireWildcard(require("./express/static"));

var serverIndex = _interopRequireWildcard(require("./express/server"));

var proxyIndex = _interopRequireWildcard(require("./jsonwp-proxy/proxy"));

var statusIndex = _interopRequireWildcard(require("./jsonwp-status/status"));

var caps = _interopRequireWildcard(require("./basedriver/capabilities"));

var ws = _interopRequireWildcard(require("./express/websocket"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

_bluebird.default.config({
  cancellation: true
});

var _default = _driver.BaseDriver;
exports.default = _default;
const {
  routeConfiguringFunction,
  errors,
  isErrorType,
  errorFromMJSONWPStatusCode,
  errorFromW3CJsonCode,
  ALL_COMMANDS,
  METHOD_MAP,
  routeToCommandName,
  NO_SESSION_ID_COMMANDS,
  isSessionCommand,
  determineProtocol,
  CREATE_SESSION_COMMAND,
  DELETE_SESSION_COMMAND,
  GET_STATUS_COMMAND
} = protocol;
exports.GET_STATUS_COMMAND = GET_STATUS_COMMAND;
exports.DELETE_SESSION_COMMAND = DELETE_SESSION_COMMAND;
exports.CREATE_SESSION_COMMAND = CREATE_SESSION_COMMAND;
exports.determineProtocol = determineProtocol;
exports.isSessionCommand = isSessionCommand;
exports.NO_SESSION_ID_COMMANDS = NO_SESSION_ID_COMMANDS;
exports.routeToCommandName = routeToCommandName;
exports.METHOD_MAP = METHOD_MAP;
exports.ALL_COMMANDS = ALL_COMMANDS;
exports.errorFromW3CJsonCode = errorFromW3CJsonCode;
exports.errorFromCode = exports.errorFromMJSONWPStatusCode = errorFromMJSONWPStatusCode;
exports.isErrorType = isErrorType;
exports.errors = errors;
exports.routeConfiguringFunction = routeConfiguringFunction;
const {
  STATIC_DIR
} = staticIndex;
exports.STATIC_DIR = STATIC_DIR;
const {
  server,
  normalizeBasePath
} = serverIndex;
exports.normalizeBasePath = normalizeBasePath;
exports.server = server;
const {
  JWProxy
} = proxyIndex;
exports.JWProxy = JWProxy;
const {
  codes: statusCodes,
  getSummaryByCode
} = statusIndex;
exports.getSummaryByCode = getSummaryByCode;
exports.statusCodes = statusCodes;
const {
  processCapabilities,
  isStandardCap,
  validateCaps
} = caps;
exports.validateCaps = validateCaps;
exports.isStandardCap = isStandardCap;
exports.processCapabilities = processCapabilities;
const {
  DEFAULT_WS_PATHNAME_PREFIX
} = ws;
exports.DEFAULT_WS_PATHNAME_PREFIX = DEFAULT_WS_PATHNAME_PREFIX;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCIiwiY29uZmlnIiwiY2FuY2VsbGF0aW9uIiwiQmFzZURyaXZlciIsInJvdXRlQ29uZmlndXJpbmdGdW5jdGlvbiIsImVycm9ycyIsImlzRXJyb3JUeXBlIiwiZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUiLCJlcnJvckZyb21XM0NKc29uQ29kZSIsIkFMTF9DT01NQU5EUyIsIk1FVEhPRF9NQVAiLCJyb3V0ZVRvQ29tbWFuZE5hbWUiLCJOT19TRVNTSU9OX0lEX0NPTU1BTkRTIiwiaXNTZXNzaW9uQ29tbWFuZCIsImRldGVybWluZVByb3RvY29sIiwiQ1JFQVRFX1NFU1NJT05fQ09NTUFORCIsIkRFTEVURV9TRVNTSU9OX0NPTU1BTkQiLCJHRVRfU1RBVFVTX0NPTU1BTkQiLCJwcm90b2NvbCIsIlNUQVRJQ19ESVIiLCJzdGF0aWNJbmRleCIsInNlcnZlciIsIm5vcm1hbGl6ZUJhc2VQYXRoIiwic2VydmVySW5kZXgiLCJKV1Byb3h5IiwicHJveHlJbmRleCIsImNvZGVzIiwic3RhdHVzQ29kZXMiLCJnZXRTdW1tYXJ5QnlDb2RlIiwic3RhdHVzSW5kZXgiLCJwcm9jZXNzQ2FwYWJpbGl0aWVzIiwiaXNTdGFuZGFyZENhcCIsInZhbGlkYXRlQ2FwcyIsImNhcHMiLCJERUZBVUxUX1dTX1BBVEhOQU1FX1BSRUZJWCIsIndzIl0sInNvdXJjZXMiOlsiLi4vLi4vbGliL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCIGZyb20gJ2JsdWViaXJkJztcblxuQi5jb25maWcoe1xuICBjYW5jZWxsYXRpb246IHRydWUsXG59KTtcblxuLy8gQmFzZURyaXZlciBleHBvcnRzXG5pbXBvcnQge0Jhc2VEcml2ZXJ9IGZyb20gJy4vYmFzZWRyaXZlci9kcml2ZXInO1xuZXhwb3J0IHtEcml2ZXJDb3JlfSBmcm9tICcuL2Jhc2Vkcml2ZXIvY29yZSc7XG5pbXBvcnQge0RldmljZVNldHRpbmdzfSBmcm9tICcuL2Jhc2Vkcml2ZXIvZGV2aWNlLXNldHRpbmdzJztcblxuZXhwb3J0IHtCYXNlRHJpdmVyLCBEZXZpY2VTZXR0aW5nc307XG5leHBvcnQgZGVmYXVsdCBCYXNlRHJpdmVyO1xuXG4vLyBNSlNPTldQIGV4cG9ydHNcbmltcG9ydCAqIGFzIHByb3RvY29sIGZyb20gJy4vcHJvdG9jb2wnO1xuaW1wb3J0IHtERUZBVUxUX0JBU0VfUEFUSCwgUFJPVE9DT0xTfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmNvbnN0IHtcbiAgcm91dGVDb25maWd1cmluZ0Z1bmN0aW9uLFxuICBlcnJvcnMsXG4gIGlzRXJyb3JUeXBlLFxuICBlcnJvckZyb21NSlNPTldQU3RhdHVzQ29kZSxcbiAgZXJyb3JGcm9tVzNDSnNvbkNvZGUsXG4gIEFMTF9DT01NQU5EUyxcbiAgTUVUSE9EX01BUCxcbiAgcm91dGVUb0NvbW1hbmROYW1lLFxuICBOT19TRVNTSU9OX0lEX0NPTU1BTkRTLFxuICBpc1Nlc3Npb25Db21tYW5kLFxuICBkZXRlcm1pbmVQcm90b2NvbCxcbiAgQ1JFQVRFX1NFU1NJT05fQ09NTUFORCxcbiAgREVMRVRFX1NFU1NJT05fQ09NTUFORCxcbiAgR0VUX1NUQVRVU19DT01NQU5ELFxufSA9IHByb3RvY29sO1xuXG5leHBvcnQge1xuICByb3V0ZUNvbmZpZ3VyaW5nRnVuY3Rpb24sXG4gIGVycm9ycyxcbiAgaXNFcnJvclR5cGUsXG4gIFBST1RPQ09MUyxcbiAgZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUsXG4gIGVycm9yRnJvbVczQ0pzb25Db2RlLFxuICBkZXRlcm1pbmVQcm90b2NvbCxcbiAgZXJyb3JGcm9tTUpTT05XUFN0YXR1c0NvZGUgYXMgZXJyb3JGcm9tQ29kZSxcbiAgQUxMX0NPTU1BTkRTLFxuICBNRVRIT0RfTUFQLFxuICByb3V0ZVRvQ29tbWFuZE5hbWUsXG4gIE5PX1NFU1NJT05fSURfQ09NTUFORFMsXG4gIGlzU2Vzc2lvbkNvbW1hbmQsXG4gIERFRkFVTFRfQkFTRV9QQVRILFxuICBDUkVBVEVfU0VTU0lPTl9DT01NQU5ELFxuICBERUxFVEVfU0VTU0lPTl9DT01NQU5ELFxuICBHRVRfU1RBVFVTX0NPTU1BTkQsXG59O1xuXG4vLyBFeHByZXNzIGV4cG9ydHNcbmltcG9ydCAqIGFzIHN0YXRpY0luZGV4IGZyb20gJy4vZXhwcmVzcy9zdGF0aWMnO1xuY29uc3Qge1NUQVRJQ19ESVJ9ID0gc3RhdGljSW5kZXg7XG5leHBvcnQge1NUQVRJQ19ESVJ9O1xuXG5pbXBvcnQgKiBhcyBzZXJ2ZXJJbmRleCBmcm9tICcuL2V4cHJlc3Mvc2VydmVyJztcbmNvbnN0IHtzZXJ2ZXIsIG5vcm1hbGl6ZUJhc2VQYXRofSA9IHNlcnZlckluZGV4O1xuZXhwb3J0IHtzZXJ2ZXIsIG5vcm1hbGl6ZUJhc2VQYXRofTtcblxuLy8ganNvbndwLXByb3h5IGV4cG9ydHNcbmltcG9ydCAqIGFzIHByb3h5SW5kZXggZnJvbSAnLi9qc29ud3AtcHJveHkvcHJveHknO1xuY29uc3Qge0pXUHJveHl9ID0gcHJveHlJbmRleDtcbmV4cG9ydCB7SldQcm94eX07XG5cbi8vIGpzb253cC1zdGF0dXMgZXhwb3J0c1xuaW1wb3J0ICogYXMgc3RhdHVzSW5kZXggZnJvbSAnLi9qc29ud3Atc3RhdHVzL3N0YXR1cyc7XG5jb25zdCB7Y29kZXM6IHN0YXR1c0NvZGVzLCBnZXRTdW1tYXJ5QnlDb2RlfSA9IHN0YXR1c0luZGV4O1xuZXhwb3J0IHtzdGF0dXNDb2RlcywgZ2V0U3VtbWFyeUJ5Q29kZX07XG5cbi8vIFczQyBjYXBhYmlsaXRpZXMgcGFyc2VyXG5pbXBvcnQgKiBhcyBjYXBzIGZyb20gJy4vYmFzZWRyaXZlci9jYXBhYmlsaXRpZXMnO1xuY29uc3Qge3Byb2Nlc3NDYXBhYmlsaXRpZXMsIGlzU3RhbmRhcmRDYXAsIHZhbGlkYXRlQ2Fwc30gPSBjYXBzO1xuZXhwb3J0IHtwcm9jZXNzQ2FwYWJpbGl0aWVzLCBpc1N0YW5kYXJkQ2FwLCB2YWxpZGF0ZUNhcHN9O1xuXG4vLyBXZWIgc29ja2V0IGhlbHBlcnNcbmltcG9ydCAqIGFzIHdzIGZyb20gJy4vZXhwcmVzcy93ZWJzb2NrZXQnO1xuY29uc3Qge0RFRkFVTFRfV1NfUEFUSE5BTUVfUFJFRklYfSA9IHdzO1xuZXhwb3J0IHtERUZBVUxUX1dTX1BBVEhOQU1FX1BSRUZJWH07XG5cbmV4cG9ydCB7UFJFRklYRURfQVBQSVVNX09QVFNfQ0FQfSBmcm9tICcuL2Jhc2Vkcml2ZXIvY2FwYWJpbGl0aWVzJztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBT0E7O0FBQ0E7O0FBQ0E7O0FBTUE7O0FBQ0E7O0FBd0NBOztBQUlBOztBQUtBOztBQUtBOztBQUtBOztBQUtBOzs7Ozs7QUE5RUFBLGlCQUFBLENBQUVDLE1BQUYsQ0FBUztFQUNQQyxZQUFZLEVBQUU7QUFEUCxDQUFUOztlQVVlQyxrQjs7QUFNZixNQUFNO0VBQ0pDLHdCQURJO0VBRUpDLE1BRkk7RUFHSkMsV0FISTtFQUlKQywwQkFKSTtFQUtKQyxvQkFMSTtFQU1KQyxZQU5JO0VBT0pDLFVBUEk7RUFRSkMsa0JBUkk7RUFTSkMsc0JBVEk7RUFVSkMsZ0JBVkk7RUFXSkMsaUJBWEk7RUFZSkMsc0JBWkk7RUFhSkMsc0JBYkk7RUFjSkM7QUFkSSxJQWVGQyxRQWZKOzs7Ozs7Ozs7Ozs7Ozs7QUF1Q0EsTUFBTTtFQUFDQztBQUFELElBQWVDLFdBQXJCOztBQUlBLE1BQU07RUFBQ0MsTUFBRDtFQUFTQztBQUFULElBQThCQyxXQUFwQzs7O0FBS0EsTUFBTTtFQUFDQztBQUFELElBQVlDLFVBQWxCOztBQUtBLE1BQU07RUFBQ0MsS0FBSyxFQUFFQyxXQUFSO0VBQXFCQztBQUFyQixJQUF5Q0MsV0FBL0M7OztBQUtBLE1BQU07RUFBQ0MsbUJBQUQ7RUFBc0JDLGFBQXRCO0VBQXFDQztBQUFyQyxJQUFxREMsSUFBM0Q7Ozs7QUFLQSxNQUFNO0VBQUNDO0FBQUQsSUFBK0JDLEVBQXJDIn0=