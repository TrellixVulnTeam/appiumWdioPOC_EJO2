'use strict';

require("source-map-support/register");

const mocha = require('gulp-mocha');

const debug = require('gulp-debug');

const gulpIf = require('gulp-if');

const utils = require('../utils');

const configure = function configure(gulp, opts, env) {
  const testFiles = utils.translatePaths([opts.test.files || opts.testFiles], env.fileAliases);
  gulp.task('unit-test:run', function unitTestRun() {
    const mochaOpts = {
      reporter: utils.getTestReporter(opts),
      timeout: opts.testTimeout,
      traceWarnings: opts.test.traceWarnings,
      traceDeprecation: opts.test.traceWarnings,
      color: true,
      exit: Boolean(opts.test.exit)
    };
    process.env._TESTING = 1;
    return gulp.src(testFiles, {
      read: false
    }).pipe(gulpIf(utils.isVerbose(), debug())).pipe(mocha(mochaOpts)).once('error', env.spawnWatcher.handleError.bind(env.spawnWatcher));
  });
  gulp.task('unit-test', gulp.series(env.testDeps, 'unit-test:run'));
};

module.exports = {
  configure
};require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL3Rhc2tzL3VuaXQtdGVzdC5qcyIsIm5hbWVzIjpbIm1vY2hhIiwicmVxdWlyZSIsImRlYnVnIiwiZ3VscElmIiwidXRpbHMiLCJjb25maWd1cmUiLCJndWxwIiwib3B0cyIsImVudiIsInRlc3RGaWxlcyIsInRyYW5zbGF0ZVBhdGhzIiwidGVzdCIsImZpbGVzIiwiZmlsZUFsaWFzZXMiLCJ0YXNrIiwidW5pdFRlc3RSdW4iLCJtb2NoYU9wdHMiLCJyZXBvcnRlciIsImdldFRlc3RSZXBvcnRlciIsInRpbWVvdXQiLCJ0ZXN0VGltZW91dCIsInRyYWNlV2FybmluZ3MiLCJ0cmFjZURlcHJlY2F0aW9uIiwiY29sb3IiLCJleGl0IiwiQm9vbGVhbiIsInByb2Nlc3MiLCJfVEVTVElORyIsInNyYyIsInJlYWQiLCJwaXBlIiwiaXNWZXJib3NlIiwib25jZSIsInNwYXduV2F0Y2hlciIsImhhbmRsZUVycm9yIiwiYmluZCIsInNlcmllcyIsInRlc3REZXBzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4iLCJzb3VyY2VzIjpbImxpYi90YXNrcy91bml0LXRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBtb2NoYSA9IHJlcXVpcmUoJ2d1bHAtbW9jaGEnKTtcbmNvbnN0IGRlYnVnID0gcmVxdWlyZSgnZ3VscC1kZWJ1ZycpO1xuY29uc3QgZ3VscElmID0gcmVxdWlyZSgnZ3VscC1pZicpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5jb25zdCBjb25maWd1cmUgPSBmdW5jdGlvbiBjb25maWd1cmUoZ3VscCwgb3B0cywgZW52KSB7XG4gIGNvbnN0IHRlc3RGaWxlcyA9IHV0aWxzLnRyYW5zbGF0ZVBhdGhzKFtvcHRzLnRlc3QuZmlsZXMgfHwgb3B0cy50ZXN0RmlsZXNdLCBlbnYuZmlsZUFsaWFzZXMpO1xuICBndWxwLnRhc2soJ3VuaXQtdGVzdDpydW4nLCBmdW5jdGlvbiB1bml0VGVzdFJ1bigpIHtcbiAgICBjb25zdCBtb2NoYU9wdHMgPSB7XG4gICAgICByZXBvcnRlcjogdXRpbHMuZ2V0VGVzdFJlcG9ydGVyKG9wdHMpLFxuICAgICAgdGltZW91dDogb3B0cy50ZXN0VGltZW91dCxcbiAgICAgIHRyYWNlV2FybmluZ3M6IG9wdHMudGVzdC50cmFjZVdhcm5pbmdzLFxuICAgICAgdHJhY2VEZXByZWNhdGlvbjogb3B0cy50ZXN0LnRyYWNlV2FybmluZ3MsXG4gICAgICBjb2xvcjogdHJ1ZSxcbiAgICAgIGV4aXQ6IEJvb2xlYW4ob3B0cy50ZXN0LmV4aXQpLFxuICAgIH07XG4gICAgLy8gc2V0IGVudiBzbyBvdXIgY29kZSBrbm93cyB3aGVuIGl0J3MgYmVpbmcgcnVuIGluIGEgdGVzdCBlbnZcbiAgICBwcm9jZXNzLmVudi5fVEVTVElORyA9IDE7XG4gICAgcmV0dXJuIGd1bHBcbiAgICAgIC5zcmModGVzdEZpbGVzLCB7cmVhZDogZmFsc2V9KVxuICAgICAgLnBpcGUoZ3VscElmKHV0aWxzLmlzVmVyYm9zZSgpLCBkZWJ1ZygpKSlcbiAgICAgIC5waXBlKG1vY2hhKG1vY2hhT3B0cykpXG4gICAgICAub25jZSgnZXJyb3InLCBlbnYuc3Bhd25XYXRjaGVyLmhhbmRsZUVycm9yLmJpbmQoZW52LnNwYXduV2F0Y2hlcikpO1xuICB9KTtcbiAgZ3VscC50YXNrKCd1bml0LXRlc3QnLCBndWxwLnNlcmllcyhlbnYudGVzdERlcHMsICd1bml0LXRlc3Q6cnVuJykpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNvbmZpZ3VyZSxcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUFyQjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxZQUFELENBQXJCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBQ0EsTUFBTUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsVUFBRCxDQUFyQjs7QUFFQSxNQUFNSSxTQUFTLEdBQUcsU0FBU0EsU0FBVCxDQUFtQkMsSUFBbkIsRUFBeUJDLElBQXpCLEVBQStCQyxHQUEvQixFQUFvQztFQUNwRCxNQUFNQyxTQUFTLEdBQUdMLEtBQUssQ0FBQ00sY0FBTixDQUFxQixDQUFDSCxJQUFJLENBQUNJLElBQUwsQ0FBVUMsS0FBVixJQUFtQkwsSUFBSSxDQUFDRSxTQUF6QixDQUFyQixFQUEwREQsR0FBRyxDQUFDSyxXQUE5RCxDQUFsQjtFQUNBUCxJQUFJLENBQUNRLElBQUwsQ0FBVSxlQUFWLEVBQTJCLFNBQVNDLFdBQVQsR0FBdUI7SUFDaEQsTUFBTUMsU0FBUyxHQUFHO01BQ2hCQyxRQUFRLEVBQUViLEtBQUssQ0FBQ2MsZUFBTixDQUFzQlgsSUFBdEIsQ0FETTtNQUVoQlksT0FBTyxFQUFFWixJQUFJLENBQUNhLFdBRkU7TUFHaEJDLGFBQWEsRUFBRWQsSUFBSSxDQUFDSSxJQUFMLENBQVVVLGFBSFQ7TUFJaEJDLGdCQUFnQixFQUFFZixJQUFJLENBQUNJLElBQUwsQ0FBVVUsYUFKWjtNQUtoQkUsS0FBSyxFQUFFLElBTFM7TUFNaEJDLElBQUksRUFBRUMsT0FBTyxDQUFDbEIsSUFBSSxDQUFDSSxJQUFMLENBQVVhLElBQVg7SUFORyxDQUFsQjtJQVNBRSxPQUFPLENBQUNsQixHQUFSLENBQVltQixRQUFaLEdBQXVCLENBQXZCO0lBQ0EsT0FBT3JCLElBQUksQ0FDUnNCLEdBREksQ0FDQW5CLFNBREEsRUFDVztNQUFDb0IsSUFBSSxFQUFFO0lBQVAsQ0FEWCxFQUVKQyxJQUZJLENBRUMzQixNQUFNLENBQUNDLEtBQUssQ0FBQzJCLFNBQU4sRUFBRCxFQUFvQjdCLEtBQUssRUFBekIsQ0FGUCxFQUdKNEIsSUFISSxDQUdDOUIsS0FBSyxDQUFDZ0IsU0FBRCxDQUhOLEVBSUpnQixJQUpJLENBSUMsT0FKRCxFQUlVeEIsR0FBRyxDQUFDeUIsWUFBSixDQUFpQkMsV0FBakIsQ0FBNkJDLElBQTdCLENBQWtDM0IsR0FBRyxDQUFDeUIsWUFBdEMsQ0FKVixDQUFQO0VBS0QsQ0FoQkQ7RUFpQkEzQixJQUFJLENBQUNRLElBQUwsQ0FBVSxXQUFWLEVBQXVCUixJQUFJLENBQUM4QixNQUFMLENBQVk1QixHQUFHLENBQUM2QixRQUFoQixFQUEwQixlQUExQixDQUF2QjtBQUNELENBcEJEOztBQXNCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0VBQ2ZsQztBQURlLENBQWpCIn0=
