"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.verifyMocks = verifyMocks;
exports.withMocks = withMocks;

require("source-map-support/register");

var _sinon = _interopRequireDefault(require("sinon"));

var _lodash = _interopRequireDefault(require("lodash"));

let SANDBOX = Symbol();

function withMocks(libs, fn) {
  return () => {
    const mocks = {
      verify() {
        this.sandbox.verify();
      },

      get sandbox() {
        return this[SANDBOX];
      },

      set sandbox(sandbox) {
        this[SANDBOX] = sandbox;
      }

    };
    beforeEach(function beforeEach() {
      mocks[SANDBOX] = _sinon.default.createSandbox();

      for (let [key, value] of _lodash.default.toPairs(libs)) {
        mocks[key] = mocks.sandbox.mock(value);
      }
    });
    afterEach(function afterEach() {
      mocks.sandbox.restore();
    });
    fn(mocks);
  };
}

function verifyMocks(mocks) {
  mocks.sandbox.verify();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTQU5EQk9YIiwiU3ltYm9sIiwid2l0aE1vY2tzIiwibGlicyIsImZuIiwibW9ja3MiLCJ2ZXJpZnkiLCJzYW5kYm94IiwiYmVmb3JlRWFjaCIsInNpbm9uIiwiY3JlYXRlU2FuZGJveCIsImtleSIsInZhbHVlIiwiXyIsInRvUGFpcnMiLCJtb2NrIiwiYWZ0ZXJFYWNoIiwicmVzdG9yZSIsInZlcmlmeU1vY2tzIl0sInNvdXJjZXMiOlsiLi4vLi4vbGliL21vY2stdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNpbm9uIGZyb20gJ3Npbm9uJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmxldCBTQU5EQk9YID0gU3ltYm9sKCk7XG5cbmZ1bmN0aW9uIHdpdGhNb2NrcyhsaWJzLCBmbikge1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGNvbnN0IG1vY2tzID0ge1xuICAgICAgdmVyaWZ5KCkge1xuICAgICAgICB0aGlzLnNhbmRib3gudmVyaWZ5KCk7XG4gICAgICB9LFxuICAgICAgZ2V0IHNhbmRib3goKSB7XG4gICAgICAgIHJldHVybiB0aGlzW1NBTkRCT1hdO1xuICAgICAgfSxcbiAgICAgIHNldCBzYW5kYm94KHNhbmRib3gpIHtcbiAgICAgICAgdGhpc1tTQU5EQk9YXSA9IHNhbmRib3g7XG4gICAgICB9LFxuICAgIH07XG4gICAgYmVmb3JlRWFjaChmdW5jdGlvbiBiZWZvcmVFYWNoKCkge1xuICAgICAgbW9ja3NbU0FOREJPWF0gPSBzaW5vbi5jcmVhdGVTYW5kYm94KCk7XG4gICAgICBmb3IgKGxldCBba2V5LCB2YWx1ZV0gb2YgXy50b1BhaXJzKGxpYnMpKSB7XG4gICAgICAgIG1vY2tzW2tleV0gPSBtb2Nrcy5zYW5kYm94Lm1vY2sodmFsdWUpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGFmdGVyRWFjaChmdW5jdGlvbiBhZnRlckVhY2goKSB7XG4gICAgICBtb2Nrcy5zYW5kYm94LnJlc3RvcmUoKTtcbiAgICB9KTtcbiAgICBmbihtb2Nrcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHZlcmlmeU1vY2tzKG1vY2tzKSB7XG4gIG1vY2tzLnNhbmRib3gudmVyaWZ5KCk7XG59XG5cbmV4cG9ydCB7d2l0aE1vY2tzLCB2ZXJpZnlNb2Nrc307XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQUlBLE9BQU8sR0FBR0MsTUFBTSxFQUFwQjs7QUFFQSxTQUFTQyxTQUFULENBQW1CQyxJQUFuQixFQUF5QkMsRUFBekIsRUFBNkI7RUFDM0IsT0FBTyxNQUFNO0lBQ1gsTUFBTUMsS0FBSyxHQUFHO01BQ1pDLE1BQU0sR0FBRztRQUNQLEtBQUtDLE9BQUwsQ0FBYUQsTUFBYjtNQUNELENBSFc7O01BSVosSUFBSUMsT0FBSixHQUFjO1FBQ1osT0FBTyxLQUFLUCxPQUFMLENBQVA7TUFDRCxDQU5XOztNQU9aLElBQUlPLE9BQUosQ0FBWUEsT0FBWixFQUFxQjtRQUNuQixLQUFLUCxPQUFMLElBQWdCTyxPQUFoQjtNQUNEOztJQVRXLENBQWQ7SUFXQUMsVUFBVSxDQUFDLFNBQVNBLFVBQVQsR0FBc0I7TUFDL0JILEtBQUssQ0FBQ0wsT0FBRCxDQUFMLEdBQWlCUyxjQUFBLENBQU1DLGFBQU4sRUFBakI7O01BQ0EsS0FBSyxJQUFJLENBQUNDLEdBQUQsRUFBTUMsS0FBTixDQUFULElBQXlCQyxlQUFBLENBQUVDLE9BQUYsQ0FBVVgsSUFBVixDQUF6QixFQUEwQztRQUN4Q0UsS0FBSyxDQUFDTSxHQUFELENBQUwsR0FBYU4sS0FBSyxDQUFDRSxPQUFOLENBQWNRLElBQWQsQ0FBbUJILEtBQW5CLENBQWI7TUFDRDtJQUNGLENBTFMsQ0FBVjtJQU1BSSxTQUFTLENBQUMsU0FBU0EsU0FBVCxHQUFxQjtNQUM3QlgsS0FBSyxDQUFDRSxPQUFOLENBQWNVLE9BQWQ7SUFDRCxDQUZRLENBQVQ7SUFHQWIsRUFBRSxDQUFDQyxLQUFELENBQUY7RUFDRCxDQXRCRDtBQXVCRDs7QUFFRCxTQUFTYSxXQUFULENBQXFCYixLQUFyQixFQUE0QjtFQUMxQkEsS0FBSyxDQUFDRSxPQUFOLENBQWNELE1BQWQ7QUFDRCJ9